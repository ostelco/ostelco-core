# PROD values for prime.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

dnsPrefix: ""
dnsSuffix: ".oya.world"

podAutoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 6
  targetCPUUtilizationPercentage: 70

cronjobs: 
  extractor: 
    enabled: true
    image: eu.gcr.io/pi-ostelco-dev/bq-metrics-extractor
    tag: "1.3.212.1.0-2d41d62b-dev"  
    dataset_project: pi-ostelco-prod
  shredder:
    enabled: true
    image: eu.gcr.io/pi-ostelco-dev/scaninfo-shredder
    tag: "1.0.0-6052932a-dev"
    dataset_project: pi-ostelco-prod
    dev: false

prime:
  image: eu.gcr.io/pi-ostelco-dev/prime
  tag: b1fc032f4 # stable tag
  pullPolicy: Always
  configDataBucket: "gs://pi-ostelco-prod-prime-files/prod"

  env:
    FIREBASE_ROOT_PATH: v2
    NEO4J_HOST: neo4j-neo4j.neo4j.svc.cluster.local
    SLACK_CHANNEL: prime-alerts
    DATA_TRAFFIC_TOPIC: data-traffic
    PURCHASE_INFO_TOPIC: purchase-info
    ACTIVE_USERS_TOPIC: active-users
    STRIPE_EVENT_TOPIC: stripe-event
    STRIPE_EVENT_STORE_SUBSCRIPTION: stripe-event-store-sub
    STRIPE_EVENT_REPORT_SUBSCRIPTION: stripe-event-report-sub
    STRIPE_EVENT_RECURRING_PAYMENT_SUBSCRIPTION: stripe-event-recurring-payment-sub
    GCP_PROJECT_ID: pi-ostelco-prod
    ACTIVATE_TOPIC_ID: ocs-activate
    CCR_SUBSCRIPTION_ID: ocs-ccr-sub
    GOOGLE_APPLICATION_CREDENTIALS: /secret/prime-service-account.json
    MY_INFO_API_URI: https://myinfosg.api.gov.sg/v2
    MY_INFO_REDIRECT_URI: https://dl.oya.world/links/myinfo

  secretVolumes:
    - secretName: "prime-sa-key"
      containerMountPath: "/secret"
    - secretName: "simmgr-secrets"
      containerMountPath: "/certs"
      secretKey: idemiaClientCert
      secretPath: idemia-client-cert.jks
    - secretName: "scaninfo-keysets"
      containerMountPath: "/scaninfo-keysets"

  envFromSecret:
    - name: SLACK_WEBHOOK_URI
      secretName: slack-secrets
      secretKey: slackWebHookUri
    - name: STRIPE_API_KEY
      secretName: stripe-secrets
      secretKey: stripeApiKey
    - name: STRIPE_ENDPOINT_SECRET
      secretName: stripe-secrets
      secretKey: stripeEndpointSecret
    - name: SCANINFO_STORAGE_BUCKET
      secretName: scaninfo-secrets
      secretKey:  bucketName
    - name: SCANINFO_MASTERKEY_URI
      secretName: scaninfo-keys
      secretKey: masterKeyUri
    - name: JUMIO_API_TOKEN
      secretName: jumio-secrets
      secretKey: apiToken
    - name: JUMIO_API_SECRET
      secretName: jumio-secrets
      secretKey: apiSecret
    - name: MY_INFO_API_CLIENT_ID
      secretName: myinfo-secrets
      secretKey: apiClientId
    - name: MY_INFO_API_CLIENT_SECRET
      secretName: myinfo-secrets
      secretKey: apiClientSecret
    - name: MY_INFO_SERVER_PUBLIC_KEY
      secretName: myinfo-secrets
      secretKey: serverPublicKey
    - name: MY_INFO_CLIENT_PRIVATE_KEY
      secretName: myinfo-secrets
      secretKey: clientPrivateKey
    - name: DB_USER
      secretName: simmgr-secrets
      secretKey: dbUser
    - name: DB_PASSWORD
      secretName: simmgr-secrets
      secretKey: dbPassword
    - name: DB_URL
      secretName: simmgr-secrets
      secretKey: dbUrl
    - name: WG2_USER
      secretName: simmgr-secrets
      secretKey: wg2User
    - name: WG2_API_KEY
      secretName: simmgr-secrets
      secretKey: wg2ApiKey
    - name: WG2_ENDPOINT
      secretName: simmgr-secrets
      secretKey: wg2Endpoint
    - name: ES2PLUS_ENDPOINT
      secretName: simmgr-secrets
      secretKey: es2plusEndpoint
    - name: ES9PLUS_ENDPOINT
      secretName: simmgr-secrets
      secretKey: es9plusEndpoint
    - name: FUNCTION_REQUESTER_IDENTIFIER
      secretName: simmgr-secrets
      secretKey: functionRequesterIdentifier
    - name: MANDRILL_API_KEY
      secretName: mandrill-secrets
      secretKey: mandrillApiKey

  ports:
    - 8080
    - 8081
    - 8082 
    - 8083 
  resources: 
    limits:
      cpu: 200m
      memory: 400Mi
    requests:
      cpu: 100m
      memory: 200Mi  
  livenessProbe: {}
    # path: /
    # port: 8081
  readinessProbe: {}
    # path: /
    # port: 8081  
  annotations: 
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/prometheus-metrics'
    prometheus.io/port: '8081'  


canary: 
  # weight: 25
  headers: # only route requests with these headers to the canary service
    x-mode: canary
  tag: ""

cloudsqlProxy:
  enabled: true
  instanceConnectionName: "pi-ostelco-prod:europe-west1:sim-manager"
  secretName: "prime-sa-key"
  secretKey: "prime-service-account.json"

esp:
  image: gcr.io/endpoints-release/endpoints-runtime
  tag: 1
  pullPolicy: IfNotPresent

ocsEsp: 
  enabled: true
  env: {}
  endpointAddress: ocs.oya.world
  ports:
    http2_port: 9000
    ssl_port: 8443
  secretVolumes:
    - secretName: prod-oya-tls
      containerMountPath: /etc/nginx/ssl
      type: ssl

apiEsp: 
  enabled: true
  env: {}
  endpointAddress: api.oya.world
  ports:
    http2_port: 9002

metricsEsp:
  enabled: true
  env: {}
  endpointAddress: metrics.oya.world
  ports:
    http2_port: 9004
    ssl_port: 9443
  secretVolumes:
    - secretName: prod-oya-tls
      containerMountPath: /etc/nginx/ssl
      type: ssl

alvinApiEsp:
  enabled: true
  env: {}
  endpointAddress: alvin-api.oya.world
  ports:
    http_port: 9008

houstonApiEsp:
  enabled: true
  env: {}
  endpointAddress: houston-api.oya.world
  ports:
    http_port: 9006

services:
  ocs:
    name: ocs
    type: LoadBalancer
    port: 443
    targetPort: 8443
    portName: grpc
    
  api:
    name: api
    type: ClusterIP
    port: 80
    targetPort: 9002
    portName: http
    host: api # the host name is formulated from concatenating: dnsPrefix, this host, and dnsSuffix
    grpcOrHttp2: true
    ambassadorMappingOptions:
      timeout_ms: 600000
  metrics:
    name: metrics
    type: LoadBalancer
    port: 443
    targetPort: 9443
    portName: grpc

  prime-houston-api:
    name: houston-api
    type: ClusterIP
    port: 80
    targetPort: 9006
    portName: http
    host: houston-api # the host name is formulated from concatenating: dnsPrefix, this host, and dnsSuffix
  prime-alvin-api:
    name: alvin-api
    type: ClusterIP
    port: 80
    targetPort: 9008
    portName: http
    host: alvin-api # the host name is formulated from concatenating: dnsPrefix, this host, and dnsSuffix
    ambassadorMappingOptions:
      timeout_ms: 600000
  dwadmin-service:
    name: dwadmin-service
    type: ClusterIP
    port: 8081
    targetPort: 8081
    portName: http
  smdpplus:
    name: smdpplus
    type: ClusterIP
    port: 80
    targetPort: 8080
    portName: http
    host: smdpplus
    clientCert: true
    caCert: smdp-cacert.prod # secretname.namespace

certs:
  enabled: true
  dnsProvider: dev-clouddns
  issuer: letsencrypt-production # or letsencrypt-staging
  tlsSecretName: prod-oya-tls
  hosts:
    - '*.oya.world'

disruptionBudget: 
  enabled: true
  minAvailable: 1

nodeSelector: {}

tolerations: []

affinity: {}