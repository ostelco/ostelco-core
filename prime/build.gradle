plugins {
  id "application"
  id "jacoco"
  id "com.github.johnrengelman.shadow" version "2.0.4"
  id "org.jetbrains.kotlin.jvm" version "1.2.41"
  id "idea"
  id "project-report"
}

sourceSets {
  test {
    java.srcDirs = ['src/test/kotlin']
  }

  integration {
    java.srcDirs = ['src/test/kotlin', 'src/integration-tests/kotlin']
    resources.srcDir 'src/integration-tests/resources'
    compileClasspath += main.output + test.output
    runtimeClasspath += main.output + test.output
  }
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
  implementation project(':ocs')
  implementation project(':prime-api')
  implementation project(':model')
  runtime project(':client-api')
  implementation project(':ostelco-lib')
  implementation "io.dropwizard:dropwizard-core:$dropwizardVersion"
  implementation "io.dropwizard:dropwizard-json-logging:$dropwizardVersion"
  // Keep it to 5.10.0 to match netty via ocs-api
  implementation 'com.google.firebase:firebase-admin:5.10.0'
  implementation 'com.google.cloud:google-cloud-pubsub:0.46.0-beta'
  implementation 'com.lmax:disruptor:3.4.2'
  implementation 'com.google.guava:guava:24.1-jre'

  testImplementation "io.dropwizard:dropwizard-testing:$dropwizardVersion"
  testImplementation 'org.mockito:mockito-core:2.18.3'
}

configurations {
  integrationImplementation.extendsFrom testImplementation
  integrationCompile.extendsFrom testCompile
  integrationRuntime.extendsFrom testRuntime
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
  testClassesDirs = sourceSets.integration.output.classesDirs
  classpath = sourceSets.integration.runtimeClasspath
}

shadowJar {
  mainClassName = 'org.ostelco.prime.PrimeApplication'
  mergeServiceFiles()
  classifier = "uber"
  version = null
}

jacocoTestReport {
  group = "Reporting"
  description = "Generate Jacoco coverage reports after running tests."
  additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
  reports {
    xml.enabled = true
    html.enabled = true
  }
}

check.dependsOn jacocoTestReport

test {
  testLogging {
    exceptionFormat = 'full'
    events "PASSED", "FAILED", "SKIPPED"
  }
}

idea {
  module {
    testSourceDirs += file('src/integration-tests/kotlin')
  }
}