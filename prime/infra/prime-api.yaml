swagger: "2.0"
info:
  title: "Ostelco API"
  description: "The client API for Panacea."
  version: "1.0.0"
host: "api.ostelco.org"
schemes:
  - "https"
paths:
  "/profile":
    get:
      description: "Get profile for the user (email-id present in the bearer token)."
      produces:
        - application/json
      operationId: "getProfile"
      responses:
        200:
          description: "Get the profile for this user."
          schema:
            $ref: '#/definitions/Profile'
        404:
          description: "Profile not found."
      security:
        - auth0_jwt: []
    post:
      description: "Create a new profile."
      consumes:
        - application/json
      produces:
        - application/json
      operationId: "createProfile"
      parameters:
        - in: body
          name: profile
          description: The profile to create.
          schema:
            $ref: '#/definitions/Profile'
      responses:
        201:
          description: "Successfully created the profile."
          schema:
              $ref: '#/definitions/Profile'
      security:
        - auth0_jwt: []
    put:
      description: "Update an existing profile."
      consumes:
        - application/json
      produces:
        - application/json
      operationId: "updateProfile"
      parameters:
        - in: body
          name: profile
          description: The updated profile.
          schema:
            $ref: '#/definitions/Profile'
      responses:
        200:
          description: "Successfully updated the profile."
          schema:
              $ref: '#/definitions/Profile'
        404:
          description: "Profile not found."
      security:
        - auth0_jwt: []
  "/products":
    get:
      description: "Get all products for the user."
      produces:
        - application/json
      operationId: "getAllProducts"
      responses:
        200:
          description: "List of products."
          schema:
            $ref: '#/definitions/ProductList'
        404:
          description: "No products found for the user."
      security:
        - auth0_jwt: []
  "/products/{sku}":
    post:
      description: "Buy the product specified in sku parameter."
      produces:
        - application/json
        - text/plain
      operationId: "buyProduct"
      responses:
        201:
          description: "Successfully purchased the product."
          schema:
            $ref: '#/definitions/Product'
        404:
          description: "Product not found."
      security:
        - auth0_jwt: []
      parameters:
      - name: sku
        in: path
        description: SKU to be purchased
        required: true
        type: string
  "/subscription":
    get:
      description: "Get subscription status for the user (identified by bearer token)."
      produces:
        - application/json
      operationId: "getSubscription"
      responses:
        200:
          description: "Get the subscription status for this user."
          schema:
            $ref: '#/definitions/SubscriptionStatus'
        404:
          description: "No subscription found for this user."
      security:
        - auth0_jwt: []
  "/consents":
    get:
      description: "Get all consents for the user."
      produces:
        - application/json
      operationId: "getConsents"
      responses:
        200:
          description: "List of consents."
          schema:
            $ref: '#/definitions/ConsentList'
        404:
          description: "No consents found for the user."
      security:
        - auth0_jwt: []
  "/consents/{consent-id}":
    put:
      description: "Change the value for the specified consent."
      operationId: "updateConsent"
      responses:
        200:
          description: "Successfully updated the consent."
        404:
          description: "Consent not found."
      security:
        - auth0_jwt: []
      parameters:
      - name: consent-id
        in: path
        description: Id of the consent to be changed
        required: true
        type: string
      - name: accepted
        in: query
        description: Whether user accepted the consent (default = true)
        required: false
        type: boolean
definitions:
  Profile:
    type: object
    properties:
      name:
        type: string
      address:
        type: string
      postCode:
        type: string
      city:
        type: string
      email:
        type: string
        format: email
    required:
      - email
  SubscriptionStatus:
    type: object
    properties:
      remaining:
        description: "Remaining data"
        type: integer
      acceptedProducts:
        description: "List of products"
        type: array
        items:
          $ref: '#/definitions/Product'
  ProductList:
    type: array
    items:
        $ref: '#/definitions/Product'
  Product:
    type: object
    properties:
      sku:
        description: "A unique Id representing a SKU"
        type: string
      price:
        $ref: '#/definitions/Price'
    required:
      - sku
      - price
  ConsentList:
    type: array
    items:
        $ref: '#/definitions/Consent'
  Consent:
    type: object
    properties:
      consentId:
        description: "The identifier of the consent"
        type: string
      description:
        description: "A description of the consent"
        type: string
      accepted:
        description: "Whether user has accepted the consent or not"
        type: boolean
  Price:
    type: object
    properties:
      amount:
        description: "A positive integer in the smallest currency unit"
        type: integer
        minimum: 0
      currency:
        description: "ISO 4217 currency code (three letter alphabetic code)"
        type: string
    required:
      - amount
      - currency
securityDefinitions:
  auth0_jwt:
    authorizationUrl: "https://ostelco.eu.auth0.com/authorize"
    flow: "implicit"
    type: "oauth2"
    x-google-issuer: "https://ostelco.eu.auth0.com/"
    x-google-jwks_uri: "https://ostelco.eu.auth0.com/.well-known/jwks.json"
    x-google-audiences: "http://google_api"
