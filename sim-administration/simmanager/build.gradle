plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.11"
    id "application"
    id "com.github.johnrengelman.shadow" version "4.0.3"
    id "idea"
}

dependencies {
    implementation project(":sim-administration:jersey-json-schema-validator")
    implementation project(":sim-administration:simcard-utils")
    implementation project(":sim-administration:es2plus4dropwizard")
    implementation project(":sim-administration:ostelco-dropwizard-utils")
    implementation project(":sim-administration:sm-dp-plus")

    implementation 'javax.activation:javax.activation-api:1.2.0'

    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    implementation "io.dropwizard:dropwizard-core:$dropwizardVersion"
    implementation "io.dropwizard:dropwizard-client:$dropwizardVersion"
    implementation "io.dropwizard:dropwizard-jdbi:$dropwizardVersion"

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    implementation "org.apache.commons:commons-csv:1.6"
    implementation "org.postgresql:postgresql:42.2.5"

    testImplementation "io.dropwizard:dropwizard-testing:$dropwizardVersion"
    testImplementation "com.nhaarman:mockito-kotlin:1.6.0"
    testImplementation "org.testcontainers:postgresql:1.10.5"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

shadowJar {
    mainClassName = "org.ostelco.simcards.admin.SimAdministrationApplication"
    mergeServiceFiles()
    classifier = "uber"
    version = null
}

sourceSets {
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDirs += file('src/integration-test/kotlin')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

integrationTest.mustRunAfter test

idea {
    module {
        testSourceDirs += file('src/integration-test/kotlin')
    }
}