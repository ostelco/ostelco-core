// these are needed only in top-level module
plugins {
  id "java"
  id "project-report"
  id "com.github.ben-manes.versions" version "0.21.0"
  id "jacoco"
  id "org.jetbrains.kotlin.jvm" version "1.3.41" apply false
  id "com.google.protobuf" version "0.8.10" apply false
  id "com.github.johnrengelman.shadow" version "5.1.0" apply false
}

allprojects {
  apply plugin: 'jacoco'

  group = 'org.ostelco'
  version = '1.0.0-SNAPSHOT'

  repositories {
    mavenCentral()
    jcenter()
    maven { url = "http://repository.jboss.org/nexus/content/repositories/releases/" }
    maven { url = "https://maven.repository.redhat.com/ga/" }
    maven { url = "http://clojars.org/repo/" }
    maven { url "https://jitpack.io" }
  }

  jacoco {
    toolVersion = "0.8.2"
  }
}

subprojects {
  sourceCompatibility = 12
  targetCompatibility = 12
  tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
  }
  ext {
    assertJVersion = "3.12.2"
    arrowVersion = "0.8.2"
    beamVersion = "2.13.0"
    csvVersion = "1.7"
    cxfVersion = "3.3.2"
    dockerComposeJunitRuleVersion = "1.0.0"
    dropwizardVersion = "1.3.12"
    metricsVersion = "4.1.0"
    firebaseVersion = "6.9.0"
    googleCloudVersion = "1.84.0"
    grpcVersion = "1.22.1"
    guavaVersion = "28.0-jre"
    jacksonVersion = "2.9.9"
    javaxActivationVersion = "1.1.1"
    javaxActivationApiVersion = "1.2.0"
    javaxAnnotationVersion = "1.3.2"
    // Keeping it version 1.16.1 to be consistent with grpc via PubSub client lib
    // Keeping it version 1.16.1 to be consistent with netty via Firebase lib
    jaxbVersion = "2.3.1"
    jdbi3Version = "3.9.0"
    jjwtVersion = "0.10.7"
    junit5Version = "5.5.1"
    kotlinVersion = "1.3.41"
    kotlinXCoroutinesVersion = "1.2.2"
    mockitoVersion = "3.0.0"
    mockitoKotlinVersion = "2.1.0"
    neo4jDriverVersion="1.7.5"
    neo4jVersion="3.5.8"
    postgresqlVersion = "42.2.6"  // See comment in ./sim-administration/simmanager/build.gradle
    prometheusDropwizardVersion = "2.2.0"
    protocVersion="3.9.0"
    slf4jVersion="1.7.26"
    // IMPORTANT: When Stripe SDK library version is updated, check if the Stripe API version has changed.
    // If so, then update API version in Stripe Web Console for callback Webhooks.
    stripeVersion = "10.12.0"
    swaggerVersion = "2.0.8"
    swaggerCodegenVersion = "2.4.7"
    testcontainersVersion = "1.12.0"
    tinkVersion = "1.2.2"
    zxingVersion = "3.4.0"
  }

  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
      jvmTarget = "1.8"
    }
  }
}

dependencyUpdates.resolutionStrategy {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'redhat'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}
