// TODO move the JUnit 5 gradle plugin to new style
// Ref: https://github.com/junit-team/junit5/issues/768
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.3'
    }
}

plugins {
    id "application"
    id "jacoco"
    id "com.github.johnrengelman.shadow" version "2.0.1"
}

apply plugin: 'org.junit.platform.gradle.plugin'

dependencies {
    implementation project(':ocs-api')
    implementation project(':diameter-stack')

    testImplementation project(':diameter-test')
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.0.3'
    testCompile 'org.junit.platform:junit-platform-runner:1.0.3'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.0.3'

    testCompile 'junit:junit:4.12'
    testRuntime 'org.junit.vintage:junit-vintage-engine:4.12.3'
}

test {
    testLogging {
        exceptionFormat = 'full'
        events "PASSED", "FAILED", "SKIPPED"
    }
}

shadowJar {
    mainClassName = 'org.ostelco.ocsgw.OcsApplication'
    mergeServiceFiles()
    classifier = "uber"
    version = null
}

task pack(type: Zip, dependsOn: 'shadowJar') {
    from ('script/') {
        into(project.name + '/script')
    }
    from ('config/dictionary.xml') {
        into (project.name + '/config/')
    }
    from ('config/server-jdiameter-config.prod.xml') {
        into (project.name + '/config/')
        rename { String fileName ->
            fileName.replace('prod.', '')
        }
    }
    from ('build/libs/ocsgw-uber.jar') {
        into(project.name + '/build/libs/')
    }
    from ('Dockerfile') {
        into(project.name)
    }
    archiveName 'ocsgw.zip'
    destinationDir(file('build/deploy/'))
}