@startuml

actor Client
participant Client

box "Prime"
    participant "client-api"
    participant "payment-processor"
    participant OCS
    participant DAO
end box
participant Stripe

activate Client
    Client -> Client : Collecting payment information

    Client -> Stripe : Create Source
    activate Stripe
    Stripe -> Client : {sourceId}
    deactivate Stripe

    Client -> "client-api": POST /profile {sourceId}
    activate "client-api"
    note right of "client-api"
       {name} identifies the user (from Oauth2 auth.)
       and is equivalent to the users email address
    end note

    "client-api" -> "payment-processor" : createProfile(name, sourceId)
    activate "payment-processor"

    alt successful case
       "payment-processor" -> Stripe : POST /v1/customers {name} (Create new subscriber with Stripe)
       activate Stripe
       "Stripe" -> "payment-processor" : {customerId}

       "payment-processor" -> Stripe : POST /v1/customers/{customerId}/sources {sourceId}
       "Stripe" -> "payment-processor"
       deactivate Stripe

       "payment-processor" -> DAO : createProfile(name, customerId, sourceId)
       activate DAO
       DAO -> "payment-processor" : {result}
       note right : {sourceId} will be saved as default payment source

       "payment-processor" -> DAO : getDefaultPlan(name)
       DAO -> "payment-processor" : {planId}
       deactivate DAO

       "payment-processor" -> Stripe : POST v1/subscriptions {planId}, {customerId}
       activate Stripe
       "Stripe" -> "payment-processor"
       deactivate Stripe

    else error
       note right of "payment-processor" : Unroll charge with Stripe etc. (TBD)

    end

    "payment-processor" -> OCS : Notify OCS

    "payment-processor" -> "client-api" : {result}
    deactivate "payment-processor"

    "client-api" -> Client : {result}
    deactivate "client-api"

deactivate Client

@enduml
